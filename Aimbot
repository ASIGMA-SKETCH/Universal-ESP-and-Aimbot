local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local AimLockEnabled = false
local Target = nil

-- Function to get the nearest player
local function getNearestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = player
            end
        end
    end
    return closestPlayer
end

-- Function to lock aim onto target
local function aimLock()
    if Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = Target.Character.HumanoidRootPart.Position
        local playerPosition = LocalPlayer.Character.HumanoidRootPart.Position
        
        -- Smoothly rotate camera towards target
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
    end
end

-- Detect right-click hold and release
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right Click
        AimLockEnabled = true
        Target = getNearestPlayer()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right Click release
        AimLockEnabled = false
        Target = nil
    end
end)

-- Update aim lock while enabled
RunService.RenderStepped:Connect(function()
    if AimLockEnabled then
        aimLock()
    end
end)
